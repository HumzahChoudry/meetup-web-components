// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tooltip aligned tooltip matches snapshot 1`] = `
<Tooltip
  align="right"
  content={
    <SectionComponent
      noSeparator={true}
    >
      <ChunkComponent>
        <h2
          className="text--big text--bold"
        >
          Dropdown content
        </h2>
      </ChunkComponent>
    </SectionComponent>
  }
  direction="top"
  id="testDropdown"
  minWidth="0px"
  noPortal={false}
  trigger={
    <Button
      component="button"
      small={true}
      type="button"
    >
      Open
    </Button>
  }
/>
`;

exports[`Tooltip tooltip with a close button should render correctly 1`] = `
<Tooltip
  align="right"
  content={
    <SectionComponent
      noSeparator={true}
    >
      <ChunkComponent>
        <h2
          className="text--big text--bold"
        >
          Dropdown content
        </h2>
      </ChunkComponent>
    </SectionComponent>
  }
  direction="bottom"
  id="testDropdown"
  isActive={true}
  minWidth="0px"
  noPortal={false}
  trigger={
    <Button
      component="button"
      small={true}
      type="button"
    >
      Open
    </Button>
  }
  withClose={true}
>
  <div
    className="popup"
    onMouseLeave={[Function]}
  >
    <div
      aria-labelledby="testDropdown"
      className="popup-trigger"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseEnter={[Function]}
    >
      <Button
        component="button"
        small={true}
        type="button"
      >
        <button
          className="button button--small"
          type="button"
        >
          Open
        </button>
      </Button>
    </div>
    <WithMatchMedia(FloatingPosition)
      align="right"
      direction="bottom"
      getContent={[Function]}
      getTrigger={[Function]}
      noPortal={false}
      offset={undefined}
    >
      <FloatingPosition
        align="right"
        direction="bottom"
        getContent={[Function]}
        getTrigger={[Function]}
        media={Object {}}
        noPortal={false}
        offset={undefined}
      >
        <ConditionalWrap
          condition={true}
          wrap={[Function]}
        >
          <Portal>
            <div
              aria-hidden={false}
              className="popup-content tooltip-content popup-content--right display--block"
              id="testDropdown"
              role="tooltip"
              style={
                Object {
                  "left": "0px",
                  "maxWidth": "200px",
                  "minWidth": "0px",
                  "top": "0px",
                }
              }
            >
              <div
                className="popup-bubble tooltip-bubble inverted popup-bubble--active popup-bubble--right"
              >
                <Button
                  className="tooltip-closeBtn"
                  component="button"
                  icon={
                    <Icon
                      className="text--secondary"
                      shape="cross"
                      size="s"
                    />
                  }
                  onClick={[Function]}
                  reset={true}
                  type="button"
                >
                  <button
                    className="button button--reset button--iconOnly tooltip-closeBtn"
                    onClick={[Function]}
                    type="button"
                  >
                    <FlexComponent
                      className="button-icon-wrapper"
                      justify="center"
                    >
                      <FlexComponent
                        aria-busy={undefined}
                        className="button-icon-wrapper"
                        direction="row"
                        isLoading={undefined}
                        justify="center"
                      >
                        <div
                          aria-busy={undefined}
                          className="flex flex--row flex--center button-icon-wrapper"
                        >
                          <FlexItemComponent
                            className="button-icon valign--middle flush--left"
                            shrink={true}
                          >
                            <FlexItemComponent
                              aria-busy={undefined}
                              className="button-icon valign--middle flush--left"
                              isLoading={undefined}
                              shrink={true}
                            >
                              <div
                                aria-busy={undefined}
                                className="flex-item flex-item--shrink button-icon valign--middle flush--left"
                              >
                                <Icon
                                  className="text--secondary"
                                  shape="cross"
                                  size="s"
                                >
                                  <span
                                    className="svg svg--cross text--secondary"
                                  >
                                    <svg
                                      className="svg-icon valign--middle"
                                      height="24"
                                      preserveAspectRatio="xMinYMin meet"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 24 24"
                                      width="24"
                                    >
                                      <use
                                        xlinkHref="#icon-cross--small"
                                      />
                                    </svg>
                                  </span>
                                </Icon>
                              </div>
                            </FlexItemComponent>
                          </FlexItemComponent>
                        </div>
                      </FlexComponent>
                    </FlexComponent>
                  </button>
                </Button>
                <SectionComponent
                  noSeparator={true}
                >
                  <SectionComponent
                    aria-busy={undefined}
                    isLoading={undefined}
                    noSeparator={true}
                  >
                    <section
                      aria-busy={undefined}
                      className="section"
                    >
                      <ChunkComponent>
                        <ChunkComponent
                          aria-busy={undefined}
                          isLoading={undefined}
                        >
                          <div
                            aria-busy={undefined}
                            className="chunk"
                          >
                            <h2
                              className="text--big text--bold"
                            >
                              Dropdown content
                            </h2>
                          </div>
                        </ChunkComponent>
                      </ChunkComponent>
                    </section>
                  </SectionComponent>
                </SectionComponent>
              </div>
            </div>
          </Portal>
        </ConditionalWrap>
      </FloatingPosition>
    </WithMatchMedia(FloatingPosition)>
  </div>
</Tooltip>
`;
